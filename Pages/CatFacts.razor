@page "/catfacts"
@inject HttpClient Http 

<h3>CatFacts</h3>

<ul>
	@foreach (CatFact catFact in CatFactList){
		<li>@catFact.Fact</li>
	}
</ul>

<button @onclick="GetCatFact">Get new cat fact!</button>
<button @onclick="GetCatFactList">Get new cat fact list!</button>


@code {
    public List<CatFact> CatFactList { get; set; } = new List<CatFact>();

    public async Task GetCatFact(){
        var response = await Http.GetFromJsonAsync<CatFact>("https://catfact.ninja/fact");
        // var catFact = await response.Content.ReadFromJsonAsync<CatFact>();
        CatFactList.Add(response);
    } 

    public async Task GetCatFactList()
    {
        var response = await Http.GetFromJsonAsync<CatFactListResponse>("https://catfact.ninja/facts");

        CatFactList.AddRange(response.Data);

    }
    public class CatFact
	{
		public string Fact { get; set; }
		public int Length { get; set; }
	}

    public class CatFactListResponse
    {
        // public long Current_Page { get; set; }

        public CatFact[] Data { get; set; }

        // public Uri First_Page_Url { get; set; }

        // public long From { get; set; }

        // public long Last_Page { get; set; }

        // public Uri Last_Page_Url { get; set; }

        // public Link[] Links { get; set; }

        // public Uri Next_Page_Url { get; set; }

        // public Uri Path { get; set; }
  
        // public long Per_Page { get; set; }

        // public Uri? Prev_Page_Url { get; set; }

        // public long To { get; set; }

        // public long Total { get; set; }
    }

    // public class Link
    // {
    //     public Uri Url { get; set; }

    //     public string Label { get; set; }

    //     public bool Active { get; set; }
    // }
}
